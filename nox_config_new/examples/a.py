a = dict(
    pts_backbone=dict(
        in_channels=64,
        layer_nums=[
            3,
            5,
            5,
        ],
        layer_strides=[
            1,
            2,
            2,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.01, type='naiveSyncBN2d'),
        out_channels=[
            64,
            128,
            256,
        ],
        type='SECOND'),
    pts_bbox_head=dict(
        anchor_generator=dict(
            ranges=[
                [
                    -74.88,
                    -74.88,
                    -0.0345,
                    74.88,
                    74.88,
                    -0.0345,
                ],
                [
                    -74.88,
                    -74.88,
                    -0.1188,
                    74.88,
                    74.88,
                    -0.1188,
                ],
                [
                    -74.88,
                    -74.88,
                    0,
                    74.88,
                    74.88,
                    0,
                ],
            ],
            reshape_out=False,
            rotations=[
                0,
                1.57,
            ],
            sizes=[
                [
                    4.73,
                    2.08,
                    1.77,
                ],
                [
                    1.81,
                    0.84,
                    1.77,
                ],
                [
                    0.91,
                    0.84,
                    1.74,
                ],
            ],
            type='AlignedAnchor3DRangeGenerator'),
        bbox_coder=dict(code_size=7, type='DeltaXYZWLHRBBoxCoder'),
        diff_rad_by_sin=True,
        dir_offset=-0.7854,
        feat_channels=384,
        in_channels=384,
        loss_bbox=dict(
            beta=0.1111111111111111, loss_weight=1.0, type='SmoothL1Loss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_dir=dict(
            loss_weight=0.2, type='CrossEntropyLoss', use_sigmoid=False),
        num_classes=3,
        type='Anchor3DHead',
        use_direction_classifier=True),
    pts_middle_encoder=dict(
        in_channels=64, output_shape=[
            468,
            468,
        ], type='PointPillarsScatter'),
    pts_neck=dict(
        in_channels=[
            64,
            128,
            256,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.01, type='naiveSyncBN2d'),
        out_channels=[
            128,
            128,
            128,
        ],
        type='SECONDFPN',
        upsample_strides=[
            1,
            2,
            4,
        ]),
    pts_voxel_encoder=dict(
        feat_channels=[
            64,
        ],
        in_channels=5,
        norm_cfg=dict(eps=0.001, momentum=0.01, type='naiveSyncBN1d'),
        point_cloud_range=[
            -74.88,
            -74.88,
            -2,
            74.88,
            74.88,
            4,
        ],
        type='HardVFE',
        voxel_size=[
            0.32,
            0.32,
            6,
        ],
        with_cluster_center=True,
        with_distance=False,
        with_voxel_center=True),
    pts_voxel_layer=dict(
        max_num_points=20,
        max_voxels=(
            32000,
            32000,
        ),
        point_cloud_range=[
            -74.88,
            -74.88,
            -2,
            74.88,
            74.88,
            4,
        ],
        voxel_size=[
            0.32,
            0.32,
            6,
        ]),
    test_cfg=dict(
        pts=dict(
            max_num=500,
            min_bbox_size=0,
            nms_across_levels=False,
            nms_pre=4096,
            nms_thr=0.25,
            score_thr=0.1,
            use_rotate_nms=True)),
    train_cfg=dict(
        pts=dict(
            allowed_border=0,
            assigner=[
                dict(
                    ignore_iof_thr=-1,
                    iou_calculator=dict(type='BboxOverlapsNearest3D'),
                    min_pos_iou=0.4,
                    neg_iou_thr=0.4,
                    pos_iou_thr=0.55,
                    type='MaxIoUAssigner'),
                dict(
                    ignore_iof_thr=-1,
                    iou_calculator=dict(type='BboxOverlapsNearest3D'),
                    min_pos_iou=0.3,
                    neg_iou_thr=0.3,
                    pos_iou_thr=0.5,
                    type='MaxIoUAssigner'),
                dict(
                    ignore_iof_thr=-1,
                    iou_calculator=dict(type='BboxOverlapsNearest3D'),
                    min_pos_iou=0.3,
                    neg_iou_thr=0.3,
                    pos_iou_thr=0.5,
                    type='MaxIoUAssigner'),
            ],
            code_weight=[
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            debug=False,
            pos_weight=-1)),
    type='HVPointPillars')
checkpoint_config = dict(interval=1)
class_names = [
    'Car',
    'Pedestrian',
    'Cyclist',
]
data = dict(
    samples_per_gpu=6,
    test=dict(
        ann_file='data/waymo/kitti_format/waymo_infos_val.pkl',
        box_type_3d='LiDAR',
        classes=[
            'Car',
            'Pedestrian',
            'Cyclist',
        ],
        data_root='data/waymo/kitti_format/',
        modality=dict(use_camera=False, use_lidar=True),
        pipeline=[
            dict(
                coord_type='LIDAR',
                file_client_args=dict(backend='disk'),
                load_dim=6,
                type='LoadPointsFromFile',
                use_dim=5),
            dict(
                flip=False,
                img_scale=(
                    1333,
                    800,
                ),
                pts_scale_ratio=1,
                transforms=[
                    dict(
                        rot_range=[
                            0,
                            0,
                        ],
                        scale_ratio_range=[
                            1.0,
                            1.0,
                        ],
                        translation_std=[
                            0,
                            0,
                            0,
                        ],
                        type='GlobalRotScaleTrans'),
                    dict(type='RandomFlip3D'),
                    dict(
                        point_cloud_range=[
                            -74.88,
                            -74.88,
                            -2,
                            74.88,
                            74.88,
                            4,
                        ],
                        type='PointsRangeFilter'),
                    dict(
                        class_names=[
                            'Car',
                            'Pedestrian',
                            'Cyclist',
                        ],
                        type='DefaultFormatBundle3D',
                        with_label=False),
                    dict(keys=[
                        'points',
                    ], type='Collect3D'),
                ],
                type='MultiScaleFlipAug3D'),
        ],
        split='training',
        test_mode=True,
        type='WaymoDataset'),
    train=dict(
        dataset=dict(
            ann_file='data/waymo/kitti_format/waymo_infos_train.pkl',
            box_type_3d='LiDAR',
            classes=[
                'Car',
                'Pedestrian',
                'Cyclist',
            ],
            data_root='data/waymo/kitti_format/',
            load_interval=5,
            modality=dict(use_camera=False, use_lidar=True),
            pipeline=[
                dict(
                    coord_type='LIDAR',
                    file_client_args=dict(backend='disk'),
                    load_dim=6,
                    type='LoadPointsFromFile',
                    use_dim=5),
                dict(
                    file_client_args=dict(backend='disk'),
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True),
                dict(
                    db_sampler=dict(
                        classes=[
                            'Car',
                            'Pedestrian',
                            'Cyclist',
                        ],
                        data_root='data/waymo/kitti_format/',
                        info_path=
                        'data/waymo/kitti_format/waymo_dbinfos_train.pkl',
                        points_loader=dict(
                            coord_type='LIDAR',
                            file_client_args=dict(backend='disk'),
                            load_dim=6,
                            type='LoadPointsFromFile',
                            use_dim=[
                                0,
                                1,
                                2,
                                3,
                                4,
                            ]),
                        prepare=dict(
                            filter_by_difficulty=[
                                -1,
                            ],
                            filter_by_min_points=dict(
                                Car=5, Cyclist=10, Pedestrian=10)),
                        rate=1.0,
                        sample_groups=dict(Car=15, Cyclist=10, Pedestrian=10)),
                    type='ObjectSample'),
                dict(
                    flip_ratio_bev_horizontal=0.5,
                    flip_ratio_bev_vertical=0.5,
                    sync_2d=False,
                    type='RandomFlip3D'),
                dict(
                    rot_range=[
                        -0.78539816,
                        0.78539816,
                    ],
                    scale_ratio_range=[
                        0.95,
                        1.05,
                    ],
                    type='GlobalRotScaleTrans'),
                dict(
                    point_cloud_range=[
                        -74.88,
                        -74.88,
                        -2,
                        74.88,
                        74.88,
                        4,
                    ],
                    type='PointsRangeFilter'),
                dict(
                    point_cloud_range=[
                        -74.88,
                        -74.88,
                        -2,
                        74.88,
                        74.88,
                        4,
                    ],
                    type='ObjectRangeFilter'),
                dict(type='PointShuffle'),
                dict(
                    class_names=[
                        'Car',
                        'Pedestrian',
                        'Cyclist',
                    ],
                    type='DefaultFormatBundle3D'),
                dict(
                    keys=[
                        'points',
                        'gt_bboxes_3d',
                        'gt_labels_3d',
                    ],
                    type='Collect3D'),
            ],
            split='training',
            test_mode=False,
            type='WaymoDataset'),
        times=2,
        type='RepeatDataset'),
    val=dict(
        ann_file='data/waymo/kitti_format/waymo_infos_val.pkl',
        box_type_3d='LiDAR',
        classes=[
            'Car',
            'Pedestrian',
            'Cyclist',
        ],
        data_root='data/waymo/kitti_format/',
        modality=dict(use_camera=False, use_lidar=True),
        pipeline=[
            dict(
                coord_type='LIDAR',
                file_client_args=dict(backend='disk'),
                load_dim=6,
                type='LoadPointsFromFile',
                use_dim=5),
            dict(
                flip=False,
                img_scale=(
                    1333,
                    800,
                ),
                pts_scale_ratio=1,
                transforms=[
                    dict(
                        rot_range=[
                            0,
                            0,
                        ],
                        scale_ratio_range=[
                            1.0,
                            1.0,
                        ],
                        translation_std=[
                            0,
                            0,
                            0,
                        ],
                        type='GlobalRotScaleTrans'),
                    dict(type='RandomFlip3D'),
                    dict(
                        point_cloud_range=[
                            -74.88,
                            -74.88,
                            -2,
                            74.88,
                            74.88,
                            4,
                        ],
                        type='PointsRangeFilter'),
                    dict(
                        class_names=[
                            'Car',
                            'Pedestrian',
                            'Cyclist',
                        ],
                        type='DefaultFormatBundle3D',
                        with_label=False),
                    dict(keys=[
                        'points',
                    ], type='Collect3D'),
                ],
                type='MultiScaleFlipAug3D'),
        ],
        split='training',
        test_mode=True,
        type='WaymoDataset'),
    workers_per_gpu=6)
data_root = 'data/waymo/kitti_format/'
dataset_type = 'WaymoDataset_waymoD5-3d-3class'
db_sampler = dict(
    classes=[
        'Car',
        'Pedestrian',
        'Cyclist',
    ],
    data_root='data/waymo/kitti_format/',
    info_path='data/waymo/kitti_format/waymo_dbinfos_train.pkl',
    points_loader=dict(
        coord_type='LIDAR',
        file_client_args=dict(backend='disk'),
        load_dim=6,
        type='LoadPointsFromFile',
        use_dim=[
            0,
            1,
            2,
            3,
            4,
        ]),
    prepare=dict(
        filter_by_difficulty=[
            -1,
        ],
        filter_by_min_points=dict(Car=5, Cyclist=10, Pedestrian=10)),
    rate=1.0,
    sample_groups=dict(Car=15, Cyclist=10, Pedestrian=10))
dist_params = dict(backend='nccl')
eval_pipeline = [
    dict(
        coord_type='LIDAR',
        file_client_args=dict(backend='disk'),
        load_dim=6,
        type='LoadPointsFromFile',
        use_dim=5),
    dict(
        class_names=[
            'Car',
            'Pedestrian',
            'Cyclist',
        ],
        type='DefaultFormatBundle3D',
        with_label=False),
    dict(keys=[
        'points',
    ], type='Collect3D'),
]
evaluation = dict(
    interval=24,
    pipeline=[
        dict(
            coord_type='LIDAR',
            file_client_args=dict(backend='disk'),
            load_dim=6,
            type='LoadPointsFromFile',
            use_dim=5),
        dict(
            class_names=[
                'Car',
                'Pedestrian',
                'Cyclist',
            ],
            type='DefaultFormatBundle3D',
            with_label=False),
        dict(keys=[
            'points',
        ], type='Collect3D'),
    ])
file_client_args = dict(backend='disk')
input_modality = dict(use_camera=False, use_lidar=True)
load_from = None
log_config = dict(
    hooks=[
        dict(type='TextLoggerHook'),
        dict(type='TensorboardLoggerHook'),
    ],
    interval=50)
log_level = 'INFO'
lr_config = dict(
    policy='step',
    step=[
        20,
        23,
    ],
    warmup='linear',
    warmup_iters=1000,
    warmup_ratio=0.001)
model = dict(
    pts_backbone=dict(
        in_channels=64,
        layer_nums=[
            3,
            5,
            5,
        ],
        layer_strides=[
            1,
            2,
            2,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.01, type='naiveSyncBN2d'),
        out_channels=[
            64,
            128,
            256,
        ],
        type='SECOND'),
    pts_bbox_head=dict(
        anchor_generator=dict(
            ranges=[
                [
                    -74.88,
                    -74.88,
                    -0.0345,
                    74.88,
                    74.88,
                    -0.0345,
                ],
                [
                    -74.88,
                    -74.88,
                    -0.1188,
                    74.88,
                    74.88,
                    -0.1188,
                ],
                [
                    -74.88,
                    -74.88,
                    0,
                    74.88,
                    74.88,
                    0,
                ],
            ],
            reshape_out=False,
            rotations=[
                0,
                1.57,
            ],
            sizes=[
                [
                    4.73,
                    2.08,
                    1.77,
                ],
                [
                    1.81,
                    0.84,
                    1.77,
                ],
                [
                    0.91,
                    0.84,
                    1.74,
                ],
            ],
            type='AlignedAnchor3DRangeGenerator'),
        bbox_coder=dict(code_size=7, type='DeltaXYZWLHRBBoxCoder'),
        diff_rad_by_sin=True,
        dir_offset=-0.7854,
        feat_channels=384,
        in_channels=384,
        loss_bbox=dict(
            beta=0.1111111111111111, loss_weight=1.0, type='SmoothL1Loss'),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        loss_dir=dict(
            loss_weight=0.2, type='CrossEntropyLoss', use_sigmoid=False),
        num_classes=3,
        type='Anchor3DHead',
        use_direction_classifier=True),
    pts_middle_encoder=dict(
        in_channels=64, output_shape=[
            468,
            468,
        ], type='PointPillarsScatter'),
    pts_neck=dict(
        in_channels=[
            64,
            128,
            256,
        ],
        norm_cfg=dict(eps=0.001, momentum=0.01, type='naiveSyncBN2d'),
        out_channels=[
            128,
            128,
            128,
        ],
        type='SECONDFPN',
        upsample_strides=[
            1,
            2,
            4,
        ]),
    pts_voxel_encoder=dict(
        feat_channels=[
            64,
        ],
        in_channels=5,
        norm_cfg=dict(eps=0.001, momentum=0.01, type='naiveSyncBN1d'),
        point_cloud_range=[
            -74.88,
            -74.88,
            -2,
            74.88,
            74.88,
            4,
        ],
        type='HardVFE',
        voxel_size=[
            0.32,
            0.32,
            6,
        ],
        with_cluster_center=True,
        with_distance=False,
        with_voxel_center=True),
    pts_voxel_layer=dict(
        max_num_points=20,
        max_voxels=(
            32000,
            32000,
        ),
        point_cloud_range=[
            -74.88,
            -74.88,
            -2,
            74.88,
            74.88,
            4,
        ],
        voxel_size=[
            0.32,
            0.32,
            6,
        ]),
    test_cfg=dict(
        pts=dict(
            max_num=500,
            min_bbox_size=0,
            nms_across_levels=False,
            nms_pre=4096,
            nms_thr=0.25,
            score_thr=0.1,
            use_rotate_nms=True)),
    train_cfg=dict(
        pts=dict(
            allowed_border=0,
            assigner=[
                dict(
                    ignore_iof_thr=-1,
                    iou_calculator=dict(type='BboxOverlapsNearest3D'),
                    min_pos_iou=0.4,
                    neg_iou_thr=0.4,
                    pos_iou_thr=0.55,
                    type='MaxIoUAssigner'),
                dict(
                    ignore_iof_thr=-1,
                    iou_calculator=dict(type='BboxOverlapsNearest3D'),
                    min_pos_iou=0.3,
                    neg_iou_thr=0.3,
                    pos_iou_thr=0.5,
                    type='MaxIoUAssigner'),
                dict(
                    ignore_iof_thr=-1,
                    iou_calculator=dict(type='BboxOverlapsNearest3D'),
                    min_pos_iou=0.3,
                    neg_iou_thr=0.3,
                    pos_iou_thr=0.5,
                    type='MaxIoUAssigner'),
            ],
            code_weight=[
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            debug=False,
            pos_weight=-1)),
    type='HVPointPillars')
momentum_config = None
mp_start_method = 'fork'
opencv_num_threads = 0
optimizer = dict(lr=0.001, type='AdamW', weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
point_cloud_range = [
    -74.88,
    -74.88,
    -2,
    74.88,
    74.88,
    4,
]
resume_from = None
runner = dict(max_epochs=24, type='EpochBasedRunner')
test_pipeline = [
    dict(
        coord_type='LIDAR',
        file_client_args=dict(backend='disk'),
        load_dim=6,
        type='LoadPointsFromFile',
        use_dim=5),
    dict(
        flip=False,
        img_scale=(
            1333,
            800,
        ),
        pts_scale_ratio=1,
        transforms=[
            dict(
                rot_range=[
                    0,
                    0,
                ],
                scale_ratio_range=[
                    1.0,
                    1.0,
                ],
                translation_std=[
                    0,
                    0,
                    0,
                ],
                type='GlobalRotScaleTrans'),
            dict(type='RandomFlip3D'),
            dict(
                point_cloud_range=[
                    -74.88,
                    -74.88,
                    -2,
                    74.88,
                    74.88,
                    4,
                ],
                type='PointsRangeFilter'),
            dict(
                class_names=[
                    'Car',
                    'Pedestrian',
                    'Cyclist',
                ],
                type='DefaultFormatBundle3D',
                with_label=False),
            dict(keys=[
                'points',
            ], type='Collect3D'),
        ],
        type='MultiScaleFlipAug3D'),
]
train_pipeline = [
    dict(
        coord_type='LIDAR',
        file_client_args=dict(backend='disk'),
        load_dim=6,
        type='LoadPointsFromFile',
        use_dim=5),
    dict(
        file_client_args=dict(backend='disk'),
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True),
    dict(
        db_sampler=dict(
            classes=[
                'Car',
                'Pedestrian',
                'Cyclist',
            ],
            data_root='data/waymo/kitti_format/',
            info_path='data/waymo/kitti_format/waymo_dbinfos_train.pkl',
            points_loader=dict(
                coord_type='LIDAR',
                file_client_args=dict(backend='disk'),
                load_dim=6,
                type='LoadPointsFromFile',
                use_dim=[
                    0,
                    1,
                    2,
                    3,
                    4,
                ]),
            prepare=dict(
                filter_by_difficulty=[
                    -1,
                ],
                filter_by_min_points=dict(Car=5, Cyclist=10, Pedestrian=10)),
            rate=1.0,
            sample_groups=dict(Car=15, Cyclist=10, Pedestrian=10)),
        type='ObjectSample'),
    dict(
        flip_ratio_bev_horizontal=0.5,
        flip_ratio_bev_vertical=0.5,
        sync_2d=False,
        type='RandomFlip3D'),
    dict(
        rot_range=[
            -0.78539816,
            0.78539816,
        ],
        scale_ratio_range=[
            0.95,
            1.05,
        ],
        type='GlobalRotScaleTrans'),
    dict(
        point_cloud_range=[
            -74.88,
            -74.88,
            -2,
            74.88,
            74.88,
            4,
        ],
        type='PointsRangeFilter'),
    dict(
        point_cloud_range=[
            -74.88,
            -74.88,
            -2,
            74.88,
            74.88,
            4,
        ],
        type='ObjectRangeFilter'),
    dict(type='PointShuffle'),
    dict(
        class_names=[
            'Car',
            'Pedestrian',
            'Cyclist',
        ],
        type='DefaultFormatBundle3D'),
    dict(keys=[
        'points',
        'gt_bboxes_3d',
        'gt_labels_3d',
    ], type='Collect3D'),
]
voxel_size = [
    0.32,
    0.32,
    6,
]
work_dir = None
workflow = [
    (
        'train',
        1,
    ),
]

